/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject2;

import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author sky
 */
public class CMframe extends javax.swing.JFrame {
   File file =new File("E://myFile.txt");
   FileLogger flog=new FileLogger(file);
CoffeeMachine Cmachine=new CoffeeMachine(500,200,300,flog);
        
public CMframe() {
        populateLastState();
        initComponents();
        espressoSingleButton.setEnabled(false);
        espressoDoubleButton.setEnabled(false);
        amricanoSingleButton.setEnabled(false);
        amricanoDoubleButton.setEnabled(false);
    }

       public static void saveLastStateToFile(CoffeeMachine c1) {
        try {
            FileOutputStream file = new FileOutputStream("E://myData.txt");
            ObjectOutputStream outputFile = new ObjectOutputStream(file);
            outputFile.writeObject(c1);
            outputFile.close();
            file.close();
        } catch (IOException z) {
            JOptionPane.showMessageDialog(null, z.getMessage());
        }

    }
        
       public void populateLastState() {
        try {
            FileInputStream file = new FileInputStream("E://myData.txt");
            ObjectInputStream inputfile = new ObjectInputStream(file);
            boolean endOfFile = false;
            while (!endOfFile) {
                try {
                    Cmachine =(CoffeeMachine) inputfile.readObject();
                } catch (EOFException e) {
                    endOfFile = true;
                } catch (Exception f) {
                    JOptionPane.showMessageDialog(null, f.getMessage());
                }
            }
            inputfile.close();

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }
    }
   
   /* public void showContents(){
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        waterText.setText(Cmachine.getWaterTank().getLevel()+" ml");
        coffeeText.setText(Cmachine.getBeansTank().getTotal_beans()+" gram");
    }*/
      

    /**
     * Creates new form CMframe
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        espressoSingleButton = new javax.swing.JButton();
        espressoDoubleButton = new javax.swing.JButton();
        amricanoSingleButton = new javax.swing.JButton();
        amricanoDoubleButton = new javax.swing.JButton();
        addWaterButton = new javax.swing.JButton();
        addCoffeeButton = new javax.swing.JButton();
        cleanButton = new javax.swing.JButton();
        waterLabel = new javax.swing.JLabel();
        coffeeLabel = new javax.swing.JLabel();
        caffienLabel = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cupCounterLabel = new javax.swing.JLabel();
        cleanCounterLabel = new javax.swing.JLabel();
        waterLevelLabel = new javax.swing.JLabel();
        beansLevelLabel = new javax.swing.JLabel();
        caffienLabel11 = new javax.swing.JLabel();

        jToolBar1.setBorder(javax.swing.BorderFactory.createTitledBorder("CVBFXB"));
        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 51));

        espressoSingleButton.setText("Espresso Single");
        espressoSingleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                espressoSingleButtonActionPerformed(evt);
            }
        });

        espressoDoubleButton.setText("Espresso Double");
        espressoDoubleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                espressoDoubleButtonActionPerformed(evt);
            }
        });

        amricanoSingleButton.setText("Amricano Single");
        amricanoSingleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amricanoSingleButtonActionPerformed(evt);
            }
        });

        amricanoDoubleButton.setText("Amricano Double");
        amricanoDoubleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amricanoDoubleButtonActionPerformed(evt);
            }
        });

        addWaterButton.setText("Add Water");
        addWaterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWaterButtonActionPerformed(evt);
            }
        });

        addCoffeeButton.setText("Add Coffee");
        addCoffeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCoffeeButtonActionPerformed(evt);
            }
        });

        cleanButton.setText("Clean");
        cleanButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cleanButtonMouseClicked(evt);
            }
        });
        cleanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanButtonActionPerformed(evt);
            }
        });

        waterLabel.setText("Water :");

        coffeeLabel.setText("Coffee :");

        caffienLabel.setText("Caffien :");

        startButton.setText("start");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startButtonMouseClicked(evt);
            }
        });
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Cup Counter");

        jLabel2.setText("Clean Counter");

        cupCounterLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cleanCounterLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        waterLevelLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        beansLevelLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        caffienLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cleanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addWaterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(addCoffeeButton)
                        .addGap(28, 28, 28)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(caffienLabel)
                                    .addComponent(waterLabel))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(beansLevelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(waterLevelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(caffienLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(coffeeLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cleanCounterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cupCounterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(espressoSingleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amricanoSingleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(espressoDoubleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amricanoDoubleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(espressoSingleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startButton)
                            .addComponent(addWaterButton)
                            .addComponent(addCoffeeButton)
                            .addComponent(cleanButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(waterLevelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(waterLabel)
                                .addGap(7, 7, 7)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(coffeeLabel))
                            .addComponent(beansLevelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(caffienLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caffienLabel))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cupCounterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(amricanoSingleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(espressoDoubleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(cleanCounterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(amricanoDoubleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addWaterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWaterButtonActionPerformed
        // TODO add your handling code here:
        int water_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of water to be add : "));
        try{
        Cmachine.getWaterTank().fill(water_to_add);
        Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
        }
        catch(WaterTankOverflowException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Cmachine.getWaterTank().setLevel(Cmachine.getWaterTank().getTank_capacity());
            Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
        }
        caffienLabel11.setText(" ");
        waterLevelLabel.setText(Cmachine.getWaterTank().getLevel()+" ml");
        beansLevelLabel.setText(Cmachine.getBeansTank().getTotal_beans()+" gram");
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        //showContents();
        saveLastStateToFile(Cmachine);
    }//GEN-LAST:event_addWaterButtonActionPerformed

    private void addCoffeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCoffeeButtonActionPerformed
        // TODO add your handling code here:
        int arabica_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Arabica Coffee Beans to be add : "));
        int robusta_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Robusta Coffee Beans to be add : "));
        try{
        Cmachine.getBeansTank().addBeans(arabica_to_add, robusta_to_add);
        Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
        }
        catch(BeansTankOverflowException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
        }
        caffienLabel11.setText(" ");
        waterLevelLabel.setText(Cmachine.getWaterTank().getLevel()+" ml");
        beansLevelLabel.setText(Cmachine.getBeansTank().getTotal_beans()+" gram");
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        //showContents();
        saveLastStateToFile(Cmachine);
    }//GEN-LAST:event_addCoffeeButtonActionPerformed

    private void startButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseClicked
        // TODO add your handling code here:
        if(Cmachine.getWasteTray().isClean()==true)
        {
            try{
                 Cmachine.Start();
                 
                 }
                    catch(EmptyMachineException ex ){
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                        int water_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of water to be add : "));
                       try{
                       Cmachine.getWaterTank().fill(water_to_add);
                      Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
                       }
                       catch(WaterTankOverflowException ex1){
                           JOptionPane.showMessageDialog(this, ex1.getMessage());
                           Cmachine.getWaterTank().setLevel(Cmachine.getWaterTank().getTank_capacity());
                           Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
                           
                       }
                       int arabica_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Arabica Coffee Beans to be add : "));
                       int robusta_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Robusta Coffee Beans to be add : "));
                       try{
                       Cmachine.getBeansTank().addBeans(arabica_to_add,robusta_to_add);
                       Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
                       }
                       catch(BeansTankOverflowException ex2){
                           JOptionPane.showMessageDialog(this, ex2.getMessage());
                           Cmachine.getBeansTank().setTotal_beans(Cmachine.getBeansTank().getTank_capacity());
                           Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
                       }
                    }
            
                    catch(EmptyBeansTankException ex){
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                        int arabica_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Arabica Coffee Beans to be add : "));
                       int robusta_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Robusta Coffee Beans to be add : "));
                       
                       try{
                       Cmachine.getBeansTank().addBeans(arabica_to_add, robusta_to_add);
                       Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
                       }
                       catch(BeansTankOverflowException ex1){
                           JOptionPane.showMessageDialog(this, ex1.getMessage());
                           Cmachine.getBeansTank().setTotal_beans(Cmachine.getBeansTank().getTank_capacity());
                           Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
                       }
                    }
                    catch(EmptyWaterTankException ex){
                       JOptionPane.showMessageDialog(this, ex.getMessage());
                       int water_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of water to be add : "));
                       try{
                       Cmachine.getWaterTank().fill(water_to_add);
                       Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
                       }
                       catch(WaterTankOverflowException ex1){
                           JOptionPane.showMessageDialog(this, ex1.getMessage());
                           Cmachine.getWaterTank().setLevel(Cmachine.getWaterTank().getTank_capacity());
                           Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
                       }
                    }
                       caffienLabel11.setText(" ");
                      waterLevelLabel.setText(Cmachine.getWaterTank().getLevel()+" ml");
                      beansLevelLabel.setText(Cmachine.getBeansTank().getTotal_beans()+" gram");
                       //showContents();
                       espressoSingleButton.setEnabled(true);
                       espressoDoubleButton.setEnabled(true);
                       amricanoSingleButton.setEnabled(true);
                       amricanoDoubleButton.setEnabled(true);

        }
        else if(Cmachine.getWasteTray().isClean()==false)
        {
            JOptionPane.showMessageDialog(this, "Your machine needs to clesn!! please empty the waste tray");
            espressoSingleButton.setEnabled(false);
            espressoDoubleButton.setEnabled(false);
            amricanoSingleButton.setEnabled(false);
            amricanoDoubleButton.setEnabled(false);
            startButton.setEnabled(false);
            addWaterButton.setEnabled(false);
            addCoffeeButton.setEnabled(false);
        }
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        saveLastStateToFile(Cmachine);
    }//GEN-LAST:event_startButtonMouseClicked

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startButtonActionPerformed

    private void espressoSingleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_espressoSingleButtonActionPerformed
        // TODO add your handling code here:
        try{
        Cmachine.setCoffee(1);
        }
        catch(NoEnoughBeansException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            int arabica_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Arabica Coffee Beans to be add : "));
            int robusta_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Robusta Coffee Beans to be add : "));
            try{
            Cmachine.getBeansTank().addBeans(arabica_to_add, robusta_to_add);
            Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
            }
            catch(BeansTankOverflowException ex1){
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Cmachine.getBeansTank().setTotal_beans(Cmachine.getBeansTank().getTank_capacity());
                Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
            }
        }
        catch(NoEnoughWaterException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            int water_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of water to be add : "));
            try{
            Cmachine.getWaterTank().fill(water_to_add);
            Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
            }
            catch(WaterTankOverflowException ex1){
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Cmachine.getWaterTank().setLevel(Cmachine.getWaterTank().getTank_capacity());
                Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
            }
        }
        caffienLabel11.setText(Cmachine.amountOfCaffeine(1)+" grams");
        waterLevelLabel.setText(Cmachine.getWaterTank().getLevel()+" ml");
        beansLevelLabel.setText(Cmachine.getBeansTank().getTotal_beans()+" gram");
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        //showContents();
        saveLastStateToFile(Cmachine);
        
        espressoSingleButton.setEnabled(false);
        espressoDoubleButton.setEnabled(false);
        amricanoSingleButton.setEnabled(false);
        amricanoDoubleButton.setEnabled(false);
       
    /*FileWriter writer;
            try {
                writer = new FileWriter("E://myFile.txt", true);
                 writer.write("Espresso Single\n");
        writer.close();
            } catch (IOException ex) {
                Logger.getLogger(CMframe.class.getName()).log(Level.SEVERE, null, ex);
            }*/
    }//GEN-LAST:event_espressoSingleButtonActionPerformed

    private void amricanoSingleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amricanoSingleButtonActionPerformed
        // TODO add your handling code here:
        try{
        Cmachine.setCoffee(2);
        }
        catch(NoEnoughBeansException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            int arabica_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Arabica Coffee Beans to be add : "));
            int robusta_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Robusta Coffee Beans to be add : "));
            try{
            Cmachine.getBeansTank().addBeans(arabica_to_add, robusta_to_add);
            Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
            }
            catch(BeansTankOverflowException ex1){
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Cmachine.getBeansTank().setTotal_beans(Cmachine.getBeansTank().getTank_capacity());
                Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
            }
        }
        catch(NoEnoughWaterException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            int water_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of water to be add : "));
            try{
            Cmachine.getWaterTank().fill(water_to_add);
            Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
            }
            catch(WaterTankOverflowException ex1){
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Cmachine.getWaterTank().setLevel(Cmachine.getWaterTank().getTank_capacity());
                Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
            }
        }
        caffienLabel11.setText(Cmachine.amountOfCaffeine(2)+" grams");
        waterLevelLabel.setText(Cmachine.getWaterTank().getLevel()+" ml");
       // showContents();
        beansLevelLabel.setText(Cmachine.getBeansTank().getTotal_beans()+" gram");
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        saveLastStateToFile(Cmachine);
        
        espressoSingleButton.setEnabled(false);
        espressoDoubleButton.setEnabled(false);
        amricanoSingleButton.setEnabled(false);
        amricanoDoubleButton.setEnabled(false);
        
        //try {
       /* FileWriter writer;
            try {
                writer = new FileWriter("E://myFile.txt", true);
                 writer.write("Amricano Single\n");
        writer.close();
            } catch (IOException ex) {
                Logger.getLogger(CMframe.class.getName()).log(Level.SEVERE, null, ex);
            }
       
    /*} catch (FileNotFoundException ex) {
        Logger.getLogger(CMframe.class.getName()).log(Level.SEVERE, null, ex);
    }*/
    }//GEN-LAST:event_amricanoSingleButtonActionPerformed

    private void espressoDoubleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_espressoDoubleButtonActionPerformed
        // TODO add your handling code here:
        try{
        Cmachine.setCoffee(3);
        }
        catch(NoEnoughBeansException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            int arabica_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Arabica Coffee Beans to be add : "));
            int robusta_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Robusta Coffee Beans to be add : "));
            try{
            Cmachine.getBeansTank().addBeans(arabica_to_add, robusta_to_add);
            Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
            }
            catch(BeansTankOverflowException ex1){
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Cmachine.getBeansTank().setTotal_beans(Cmachine.getBeansTank().getTank_capacity());
                Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
            }
        }
        catch(NoEnoughWaterException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            int water_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of water to be add : "));
            try{
            Cmachine.getWaterTank().fill(water_to_add);
            Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
            }
            catch(WaterTankOverflowException ex1){
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Cmachine.getWaterTank().setLevel(Cmachine.getWaterTank().getTank_capacity());
                Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
            }
        }
        caffienLabel11.setText(Cmachine.amountOfCaffeine(3)+" grams");
        waterLevelLabel.setText(Cmachine.getWaterTank().getLevel()+" ml");
        beansLevelLabel.setText(Cmachine.getBeansTank().getTotal_beans()+" gram");
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        //showContents();
        saveLastStateToFile(Cmachine);
        
        espressoSingleButton.setEnabled(false);
        espressoDoubleButton.setEnabled(false);
        amricanoSingleButton.setEnabled(false);
        amricanoDoubleButton.setEnabled(false);
        
      /* FileWriter writer;
            try {
                writer = new FileWriter("E://myFile.txt", true);
                 writer.write("Espresso Double\n");
        writer.close();
            } catch (IOException ex) {
                Logger.getLogger(CMframe.class.getName()).log(Level.SEVERE, null, ex);
            }*/
    }//GEN-LAST:event_espressoDoubleButtonActionPerformed

    private void amricanoDoubleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amricanoDoubleButtonActionPerformed
        // TODO add your handling code here:
        try{
        Cmachine.setCoffee(4);
        }
        catch(NoEnoughBeansException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            int arabica_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Arabica Coffee Beans to be add : "));
            int robusta_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of Robusta Coffee Beans to be add : "));
            try{
            Cmachine.getBeansTank().addBeans(arabica_to_add, robusta_to_add);
            Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
            }
            catch(BeansTankOverflowException ex1){
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Cmachine.getBeansTank().setTotal_beans(Cmachine.getBeansTank().getTank_capacity());
                Cmachine.getLogger().log(arabica_to_add+robusta_to_add+" gram of coffee beans has been added\n");
            }
        }
        catch(NoEnoughWaterException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
            int water_to_add=Integer.parseInt(JOptionPane.showInputDialog("enter the amount of water to be add : "));
            try{
            Cmachine.getWaterTank().fill(water_to_add);
            Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
            }
            catch(WaterTankOverflowException ex1){
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Cmachine.getWaterTank().setLevel(Cmachine.getWaterTank().getTank_capacity());
                Cmachine.getLogger().log(water_to_add+" ml of water has been added\n");
            }
        }
        caffienLabel11.setText(Cmachine.amountOfCaffeine(4)+" grams");
        waterLevelLabel.setText(Cmachine.getWaterTank().getLevel()+" ml");
        beansLevelLabel.setText(Cmachine.getBeansTank().getTotal_beans()+" gram");
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        //showContents();
        saveLastStateToFile(Cmachine);
        
        espressoSingleButton.setEnabled(false);
        espressoDoubleButton.setEnabled(false);
        amricanoSingleButton.setEnabled(false);
        amricanoDoubleButton.setEnabled(false);
        
      /*  FileWriter writer;
            try {
                writer = new FileWriter("E://myFile.txt", true);
                 writer.write("Amricano Double\n");
        writer.close();
            } catch (IOException ex) {
                Logger.getLogger(CMframe.class.getName()).log(Level.SEVERE, null, ex);
            }*/
    }//GEN-LAST:event_amricanoDoubleButtonActionPerformed

    private void cleanButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cleanButtonMouseClicked
        // TODO add your handling code here:
        Cmachine.getWasteTray().setClean_counter(0);
        Cmachine.setCleanCounter(Cmachine.getCleanCounter()+1);
        saveLastStateToFile(Cmachine);
        espressoSingleButton.setEnabled(false);
        espressoDoubleButton.setEnabled(false);
        amricanoSingleButton.setEnabled(false);
        amricanoDoubleButton.setEnabled(false);
        cupCounterLabel.setText(Cmachine.getCupCounter()+"");
        cleanCounterLabel.setText(Cmachine.getCleanCounter()+"");
        startButton.setEnabled(true);
        addWaterButton.setEnabled(true);
        addCoffeeButton.setEnabled(true);
    }//GEN-LAST:event_cleanButtonMouseClicked

    private void cleanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cleanButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CMframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CMframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CMframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CMframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CMframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCoffeeButton;
    private javax.swing.JButton addWaterButton;
    private javax.swing.JButton amricanoDoubleButton;
    private javax.swing.JButton amricanoSingleButton;
    private javax.swing.JLabel beansLevelLabel;
    private javax.swing.JLabel caffienLabel;
    private javax.swing.JLabel caffienLabel11;
    private javax.swing.JButton cleanButton;
    private javax.swing.JLabel cleanCounterLabel;
    private javax.swing.JLabel coffeeLabel;
    private javax.swing.JLabel cupCounterLabel;
    private javax.swing.JButton espressoDoubleButton;
    private javax.swing.JButton espressoSingleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel waterLabel;
    private javax.swing.JLabel waterLevelLabel;
    // End of variables declaration//GEN-END:variables
}
